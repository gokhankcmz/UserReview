// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace UserReview.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("operatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("rejectReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("star")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("userId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("41332237-ffc1-4c63-8edf-1fd1ec602473"),
                            CreatedAt = new DateTime(2021, 5, 9, 14, 55, 42, 7, DateTimeKind.Local).AddTicks(141),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            content = "Çamaşır makinesi aldım ama içinden çamaşır çıkmadı.",
                            operatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            star = 1,
                            status = 1,
                            title = "Aldatıcı satıcı.",
                            userId = new Guid("f27f1c31-9b90-4406-8e7a-6dd1e6a7535c")
                        },
                        new
                        {
                            Id = new Guid("35d174b7-57b9-44bd-842a-4ee070b786bb"),
                            CreatedAt = new DateTime(2021, 5, 9, 14, 55, 42, 7, DateTimeKind.Local).AddTicks(2247),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            content = "Yemekler çok kötüydü ama kuryeniz çok nazik bir beyefendiydisırf onun için 5 yıldız veriyorum bence kendisi iyi bir zammı hak ediyor.",
                            operatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            star = 5,
                            status = 0,
                            title = "Kurye çok iyi.",
                            userId = new Guid("f27f1c31-9b90-4406-8e7a-6dd1e6a7535c")
                        });
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("userType")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("username", "email", "Id")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5198f585-2ec1-4a97-ab57-ed2ea6c69353"),
                            CreatedAt = new DateTime(2021, 5, 9, 14, 55, 42, 12, DateTimeKind.Local).AddTicks(4892),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "FirstUser@email.com",
                            firstName = "First User Firstname",
                            lastName = "First User Lastname",
                            password = "123456",
                            userType = 1,
                            username = "FirstUser"
                        },
                        new
                        {
                            Id = new Guid("f27f1c31-9b90-4406-8e7a-6dd1e6a7535c"),
                            CreatedAt = new DateTime(2021, 5, 9, 14, 55, 42, 12, DateTimeKind.Local).AddTicks(6993),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "SecondUser@email.com",
                            firstName = "Second User Firstname",
                            lastName = "Second User Lastname",
                            password = "1.23456",
                            userType = 1,
                            username = "SecondUser"
                        },
                        new
                        {
                            Id = new Guid("a86611d5-6f64-4951-859e-7249b3ef26e9"),
                            CreatedAt = new DateTime(2021, 5, 9, 14, 55, 42, 12, DateTimeKind.Local).AddTicks(7003),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "admin1@email.com",
                            firstName = "Admin1 Firstname",
                            lastName = "Admin1 Lastname",
                            password = "123456",
                            userType = 0,
                            username = "VeryCoolAdmin"
                        },
                        new
                        {
                            Id = new Guid("90bcc60a-34e0-49f0-a10f-13222c9fc6f2"),
                            CreatedAt = new DateTime(2021, 5, 9, 14, 55, 42, 12, DateTimeKind.Local).AddTicks(7006),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "admin2@email.com",
                            firstName = "Admin2 Firstname",
                            lastName = "Admin2 Lastname",
                            password = "123456",
                            userType = 0,
                            username = "VeryNiceAdmin"
                        });
                });

            modelBuilder.Entity("Entities.Review", b =>
                {
                    b.HasOne("Entities.User", "user")
                        .WithMany("Reviews")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
